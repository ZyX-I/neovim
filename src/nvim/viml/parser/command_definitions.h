/* vi:set ts=8 sts=4 sw=4:
 *
 * VIM - Vi IMproved	by Bram Moolenaar
 *
 * Do ":help uganda"  in Vim to read copying and usage conditions.
 * Do ":help credits" in Vim to see a list of people who contributed.
 */

/*
 * This file defines the Ex commands.
 * When DO_DECLARE_EXCMD is defined, the table with ex command names and
 * options results.
 * When DO_DECLARE_EXCMD is NOT defined, the enum with all the Ex commands
 * results.
 * This clever trick was invented by Ron Aaron.
 */

/*
 * When adding an Ex command:
 * 1. Add an entry in the table below.  Keep it sorted on the shortest
 *    version of the command name that works.  If it doesn't start with a
 *    lower case letter, add it at the end.
 * 2. Add a "case: kCmdXxx" in the big switch in ex_docmd.c.
 * 3. Add an entry in the index for Ex commands at ":help ex-cmd-index".
 * 4. Add documentation in ../doc/xxx.txt.  Add a tag for both the short and
 *    long name of the command.
 */

#ifndef NVIM_VIML_PARSER_COMMAND_DEFINITIONS_H
#define NVIM_VIML_PARSER_COMMAND_DEFINITIONS_H
#undef NVIM_VIML_PARSER_COMMAND_DEFINITIONS_H
// ^ Guard is never used. Makes linter happy.

#if (defined(DO_DECLARE_EXCMD) \
     && !defined(NVIM_VIML_PARSER_COMMAND_DEFINITIONS_H_DECLARED)) \
    || \
    (!defined(DO_DECLARE_EXCMD) \
     && !defined(NVIM_VIML_PARSER_COMMAND_DEFINITIONS_H_DEFINED_ENUM))
#ifdef DO_DECLARE_EXCMD
# define NVIM_VIML_PARSER_COMMAND_DEFINITIONS_H_DECLARED
#else
# define NVIM_VIML_PARSER_COMMAND_DEFINITIONS_H_DEFINED_ENUM
#endif

#include <stdint.h>

#include "nvim/viml/parser/ex_commands.h"
#include "nvim/viml/parser/command_arguments.h"

#ifdef RANGE
# undef RANGE                   /* SASC on Amiga defines it */
#endif

#ifdef RANGE
# undef RANGE
#endif
#ifdef BANG
# undef BANG
#endif
#ifdef EXTRA
# undef EXTRA
#endif
#ifdef XFILE
# undef XFILE
#endif
#ifdef NOSPC
# undef NOSPC
#endif
#ifdef DFLALL
# undef DFLALL
#endif
#ifdef WHOLEFOLD
# undef WHOLEFOLD
#endif
#ifdef NEEDARG
# undef NEEDARG
#endif
#ifdef TRLBAR
# undef TRLBAR
#endif
#ifdef REGSTR
# undef REGSTR
#endif
#ifdef COUNT
# undef COUNT
#endif
#ifdef NOTRLCOM
# undef NOTRLCOM
#endif
#ifdef ZEROR
# undef ZEROR
#endif
#ifdef USECTRLV
# undef USECTRLV
#endif
#ifdef NOTADR
# undef NOTADR
#endif
#ifdef EDITCMD
# undef EDITCMD
#endif
#ifdef BUFNAME
# undef BUFNAME
#endif
#ifdef BUFUNL
# undef BUFUNL
#endif
#ifdef ARGOPT
# undef ARGOPT
#endif
#ifdef SBOXOK
# undef SBOXOK
#endif
#ifdef CMDWIN
# undef CMDWIN
#endif
#ifdef MODIFY
# undef MODIFY
#endif
#ifdef EXFLAGS
# undef EXFLAGS
#endif
#ifdef ISMODIFIER
# undef ISMODIFIER
#endif
#ifdef ISGREP
# undef ISGREP
#endif
#ifdef ISEXPR
# undef ISEXPR
#endif
#ifdef LITERAL
# undef LITERAL
#endif

#ifdef FILES
# undef FILES
#endif
#ifdef WORD1
# undef WORD1
#endif
#ifdef FILE1
# undef FILE1
#endif

#define RANGE           0x001   // allow a linespecs
#define BANG            0x002   // allow a ! after the command name
#define EXTRA           0x004   // allow extra args after command name
#define XFILE           0x008   // expand wildcards in extra part
#define NOSPC           0x010   // no spaces allowed in the extra part
#define DFLALL          0x020   // default file range is 1,$
#define WHOLEFOLD       0x040   // extend range to include whole fold also
                                // when less than two numbers given
#define NEEDARG         0x080   // argument required
#define TRLBAR          0x100   // check for trailing vertical bar
#define REGSTR          0x200   // allow "x for register designation
#define COUNT           0x400   // allow count in argument, after command
#define NOTRLCOM        0x800   // no trailing comment allowed
#define ZEROR          0x1000   // zero line number allowed
#define USECTRLV       0x2000   // do not remove CTRL-V from argument
#define NOTADR         0x4000   // number before command is not an address
#define EDITCMD        0x8000   // allow "+command" argument
#define BUFNAME       0x10000L  // accepts buffer name
#define BUFUNL        0x20000L  // accepts unlisted buffer too
#define ARGOPT        0x40000L  // allow "++opt=val" argument
#define SBOXOK        0x80000L  // allowed in the sandbox
#define CMDWIN       0x100000L  // allowed in cmdline window
#define MODIFY       0x200000L  // forbidden in non-'modifiable' buffer
#define EXFLAGS      0x400000L  // allow flags after count in argument

#define ISMODIFIER   0x800000L  // is a modifier command
#define ISGREP      0x1000000L  // :*(vim|)grep* commands
#define ISEXPR      0x2000000L  // :if/:*expr commands
#define LITERAL     0x4000000L  // Do not transform its arguments

#define FILES  (XFILE | EXTRA)  // multiple extra files allowed
#define WORD1  (EXTRA | NOSPC)  // one extra word allowed
#define FILE1  (FILES | NOSPC)  // 1 file allowed, defaults to current file

/*
 * This array maps ex command names to command codes.
 * The order in which command names are listed below is significant --
 * ambiguous abbreviations are always resolved to be the first possible match
 * (e.g. "r" is taken to mean "read", not "rewind", because "read" comes
 * before "rewind").
 * Not supported commands are included to avoid ambiguities.
 */
#ifdef EX
# undef EX          /* just in case */
#endif
#ifdef DO_DECLARE_EXCMD
# define EX(idx, name, func, last_arg, args, flags) \
    {(char *)name, \
     (uint_least32_t) (flags), \
     last_arg + 1, \
     (CommandArgType[]) args, \
     func}

# define NOFUNC NULL
VimlCommandDefinition cmddefs[] =
#else
# define EX(idx, name, func, last_arg, args, flags) idx
typedef enum
#endif
{
#ifndef DO_DECLARE_EXCMD
  kCmdUnknown = 0,
#endif
  EX(kCmdAppend,          "append",       &parse_append,
     ARG_APPEND_LINES, ARGS_APPEND,
     BANG|RANGE|ZEROR|TRLBAR|CMDWIN|MODIFY),
  EX(kCmdAbbreviate,      "abbreviate",   &parse_map,
     ARG_MAP_EXPR, ARGS_MAP,
     EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdAbclear,         "abclear",      &parse_mapclear,
     ARG_CLEAR_BUFFER, ARGS_CLEAR,
     EXTRA|TRLBAR|CMDWIN),
  EX(kCmdAboveleft,       "aboveleft",    NOFUNC,
     ARG_MODIFIER_CMD, ARGS_MODIFIER,
     NEEDARG|EXTRA|NOTRLCOM | ISMODIFIER),
  EX(kCmdAll,             "all",          NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     BANG|RANGE|NOTADR|COUNT|TRLBAR),
  EX(kCmdAmenu,           "amenu",        &parse_menu,
     ARG_MENU_RHS, ARGS_MENU,
     RANGE|NOTADR|ZEROR|EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdAnoremenu,       "anoremenu",    &parse_menu,
     ARG_MENU_RHS, ARGS_MENU,
     RANGE|NOTADR|ZEROR|EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdArgs,            "args",         NOFUNC,
     ARG_E_FILES, ARGS_E,
     BANG|FILES|EDITCMD|ARGOPT|TRLBAR),
  EX(kCmdArgadd,          "argadd",       NOFUNC,
     ARG_SO_FILES, ARGS_SO,
     BANG|NEEDARG|RANGE|NOTADR|ZEROR|FILES|TRLBAR),
  EX(kCmdArgdelete,       "argdelete",    NOFUNC,
     ARG_SO_FILES, ARGS_SO,
     BANG|RANGE|NOTADR|FILES|TRLBAR),
  EX(kCmdArgdo,           "argdo",        &parse_do,
     ARG_DO_CMD, ARGS_DO,
     BANG|NEEDARG|EXTRA|NOTRLCOM | LITERAL),
  EX(kCmdArgedit,         "argedit",      NOFUNC,
     ARG_E_FILES, ARGS_E,
     BANG|NEEDARG|RANGE|NOTADR|FILE1|EDITCMD|ARGOPT|TRLBAR),
  EX(kCmdArgglobal,       "argglobal",    NOFUNC,
     ARG_E_FILES, ARGS_E,
     BANG|FILES|EDITCMD|ARGOPT|TRLBAR),
  EX(kCmdArglocal,        "arglocal",     NOFUNC,
     ARG_E_FILES, ARGS_E,
     BANG|FILES|EDITCMD|ARGOPT|TRLBAR),
  EX(kCmdArgument,        "argument",     NOFUNC,
     ARG_E_FILES, ARGS_E,
     BANG|RANGE|NOTADR|COUNT|EXTRA|EDITCMD|ARGOPT|TRLBAR),
  EX(kCmdAscii,           "ascii",        NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     TRLBAR|SBOXOK|CMDWIN),
  EX(kCmdAutocmd,         "autocmd",      &parse_autocmd,
     ARG_AU_NESTED, ARGS_AU,
     BANG|EXTRA|NOTRLCOM|USECTRLV|CMDWIN | LITERAL),
  EX(kCmdAugroup,         "augroup",      &parse_rest_allow_empty,
     ARG_NAME_NAME, ARGS_NAME,
     BANG|WORD1|TRLBAR|CMDWIN),
  EX(kCmdAunmenu,         "aunmenu",      &parse_unmenu,
     ARG_UNMENU_LHS, ARGS_UNMENU,
     EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdBuffer,          "buffer",       NOFUNC,
     ARG_SO_FILES, ARGS_SO,
     BANG|RANGE|NOTADR|BUFNAME|BUFUNL|COUNT|EXTRA|TRLBAR),
  EX(kCmdBNext,           "bNext",        NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     BANG|RANGE|NOTADR|COUNT|TRLBAR),
  EX(kCmdBall,            "ball",         NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|COUNT|TRLBAR),
  EX(kCmdBadd,            "badd",         NOFUNC,
     ARG_SO_FILES, ARGS_SO,
     NEEDARG|FILE1|EDITCMD|TRLBAR|CMDWIN),
  EX(kCmdBdelete,         "bdelete",      NOFUNC,
     ARG_SO_FILES, ARGS_SO,
     BANG|RANGE|NOTADR|BUFNAME|COUNT|EXTRA|TRLBAR),
  EX(kCmdBehave,          "behave",       &parse_behave,
     ARG_NAME_NAME, ARGS_NAME,
     NEEDARG|WORD1|TRLBAR|CMDWIN),
  EX(kCmdBelowright,      "belowright",   NOFUNC,
     ARG_MODIFIER_CMD, ARGS_MODIFIER,
     NEEDARG|EXTRA|NOTRLCOM | ISMODIFIER),
  EX(kCmdBfirst,          "bfirst",       NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     BANG|RANGE|NOTADR|TRLBAR),
  EX(kCmdBlast,           "blast",        NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     BANG|RANGE|NOTADR|TRLBAR),
  EX(kCmdBmodified,       "bmodified",    NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     BANG|RANGE|NOTADR|COUNT|TRLBAR),
  EX(kCmdBnext,           "bnext",        NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     BANG|RANGE|NOTADR|COUNT|TRLBAR),
  EX(kCmdBotright,        "botright",     NOFUNC,
     ARG_MODIFIER_CMD, ARGS_MODIFIER,
     NEEDARG|EXTRA|NOTRLCOM | ISMODIFIER),
  EX(kCmdBprevious,       "bprevious",    NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     BANG|RANGE|NOTADR|COUNT|TRLBAR),
  EX(kCmdBrewind,         "brewind",      NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     BANG|RANGE|NOTADR|TRLBAR),
  EX(kCmdBreak,           "break",        NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     TRLBAR|SBOXOK|CMDWIN),
  EX(kCmdBreakadd,        "breakadd",     &parse_breakadd,
     ARG_BREAK_NAME, ARGS_BREAK,
     EXTRA|TRLBAR|CMDWIN),
  EX(kCmdBreakdel,        "breakdel",     &parse_breakadd,
     ARG_BREAK_NAME, ARGS_BREAK,
     EXTRA|TRLBAR|CMDWIN),
  EX(kCmdBreaklist,       "breaklist",    NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     EXTRA|TRLBAR|CMDWIN),
  EX(kCmdBrowse,          "browse",       NOFUNC,
     ARG_MODIFIER_CMD, ARGS_MODIFIER,
     NEEDARG|EXTRA|NOTRLCOM|CMDWIN | ISMODIFIER),
  EX(kCmdBuffers,         "buffers",      NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     BANG|TRLBAR|CMDWIN),
  EX(kCmdBufdo,           "bufdo",        &parse_do,
     ARG_DO_CMD, ARGS_DO,
     BANG|NEEDARG|EXTRA|NOTRLCOM | LITERAL),
  EX(kCmdBunload,         "bunload",      NOFUNC,
     ARG_SO_FILES, ARGS_SO,
     BANG|RANGE|NOTADR|BUFNAME|COUNT|EXTRA|TRLBAR),
  EX(kCmdBwipeout,        "bwipeout",     NOFUNC,
     ARG_SO_FILES, ARGS_SO,
     BANG|RANGE|NOTADR|BUFNAME|BUFUNL|COUNT|EXTRA|TRLBAR),
  EX(kCmdChange,          "change",       &parse_append,
     ARG_APPEND_LINES, ARGS_APPEND,
     BANG|WHOLEFOLD|RANGE|COUNT|TRLBAR|CMDWIN|MODIFY),
  EX(kCmdCNext,           "cNext",        NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|COUNT|TRLBAR|BANG),
  EX(kCmdCNfile,          "cNfile",       NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|COUNT|TRLBAR|BANG),
  EX(kCmdCabbrev,         "cabbrev",      &parse_map,
     ARG_MAP_EXPR, ARGS_MAP,
     EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdCabclear,        "cabclear",     &parse_mapclear,
     ARG_CLEAR_BUFFER, ARGS_CLEAR,
     EXTRA|TRLBAR|CMDWIN),
  EX(kCmdCaddbuffer,      "caddbuffer",   &parse_cbuffer,
     ARG_NUMBER_NUMBER, ARGS_NUMBER,
     RANGE|NOTADR|WORD1|TRLBAR),
  EX(kCmdCaddexpr,        "caddexpr",     &parse_expr_cmd,
     ARG_EXPR_EXPR, ARGS_EXPR,
     NEEDARG|WORD1|NOTRLCOM|TRLBAR | ISEXPR),
  EX(kCmdCaddfile,        "caddfile",     NOFUNC,
     ARG_SO_FILES, ARGS_SO,
     TRLBAR|FILE1),
  EX(kCmdCall,            "call",         &parse_call,
     ARG_EXPR_EXPR, ARGS_EXPR,
     RANGE|NEEDARG|EXTRA|NOTRLCOM|SBOXOK|CMDWIN | ISEXPR),
  EX(kCmdCatch,           "catch",        &parse_catch,
     ARG_REG_REG, ARGS_REG,
     EXTRA|SBOXOK|CMDWIN | LITERAL),
  EX(kCmdCbuffer,         "cbuffer",      &parse_cbuffer,
     ARG_NUMBER_NUMBER, ARGS_NUMBER,
     BANG|RANGE|NOTADR|WORD1|TRLBAR),
  EX(kCmdCc,              "cc",           NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|COUNT|TRLBAR|BANG),
  EX(kCmdCclose,          "cclose",       NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|COUNT|TRLBAR),
  EX(kCmdCd,              "cd",           NOFUNC,
     ARG_SO_FILES, ARGS_SO,
     BANG|FILE1|TRLBAR|CMDWIN),
  EX(kCmdCenter,          "center",       &parse_number,
     ARG_NUMBER_NUMBER, ARGS_NUMBER,
     TRLBAR|RANGE|WHOLEFOLD|EXTRA|CMDWIN|MODIFY),
  EX(kCmdCexpr,           "cexpr",        &parse_expr_cmd,
     ARG_EXPR_EXPR, ARGS_EXPR,
     NEEDARG|WORD1|NOTRLCOM|TRLBAR|BANG | ISEXPR),
  EX(kCmdCfile,           "cfile",        NOFUNC,
     ARG_SO_FILES, ARGS_SO,
     TRLBAR|FILE1|BANG),
  EX(kCmdCfirst,          "cfirst",       NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|COUNT|TRLBAR|BANG),
  EX(kCmdCgetfile,        "cgetfile",     NOFUNC,
     ARG_SO_FILES, ARGS_SO,
     TRLBAR|FILE1),
  EX(kCmdCgetbuffer,      "cgetbuffer",   &parse_cbuffer,
     ARG_NUMBER_NUMBER, ARGS_NUMBER,
     RANGE|NOTADR|WORD1|TRLBAR),
  EX(kCmdCgetexpr,        "cgetexpr",     &parse_expr_cmd,
     ARG_EXPR_EXPR, ARGS_EXPR,
     NEEDARG|WORD1|NOTRLCOM|TRLBAR | ISEXPR),
  EX(kCmdChdir,           "chdir",        NOFUNC,
     ARG_SO_FILES, ARGS_SO,
     BANG|FILE1|TRLBAR|CMDWIN),
  EX(kCmdChanges,         "changes",      NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     TRLBAR|CMDWIN),
  EX(kCmdCheckpath,       "checkpath",    NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     TRLBAR|BANG|CMDWIN),
  EX(kCmdChecktime,       "checktime",    NOFUNC,
     ARG_SO_FILES, ARGS_SO,
     RANGE|NOTADR|BUFNAME|COUNT|EXTRA|TRLBAR),
  EX(kCmdClist,           "clist",        &parse_clist,
     ARG_CLIST_LAST, ARGS_CLIST,
     BANG|EXTRA|TRLBAR|CMDWIN),
  EX(kCmdClast,           "clast",        NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|COUNT|TRLBAR|BANG),
  EX(kCmdClose,           "close",        NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     BANG|TRLBAR|CMDWIN),
  EX(kCmdCmap,            "cmap",         &parse_map,
     ARG_MAP_EXPR, ARGS_MAP,
     EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdCmapclear,       "cmapclear",    &parse_mapclear,
     ARG_CLEAR_BUFFER, ARGS_CLEAR,
     EXTRA|TRLBAR|CMDWIN),
  EX(kCmdCmenu,           "cmenu",        &parse_menu,
     ARG_MENU_RHS, ARGS_MENU,
     RANGE|NOTADR|ZEROR|EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdCnext,           "cnext",        NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|COUNT|TRLBAR|BANG),
  EX(kCmdCnewer,          "cnewer",       NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|COUNT|TRLBAR),
  EX(kCmdCnfile,          "cnfile",       NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|COUNT|TRLBAR|BANG),
  EX(kCmdCnoremap,        "cnoremap",     &parse_map,
     ARG_MAP_EXPR, ARGS_MAP,
     EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdCnoreabbrev,     "cnoreabbrev",  &parse_map,
     ARG_MAP_EXPR, ARGS_MAP,
     EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdCnoremenu,       "cnoremenu",    &parse_menu,
     ARG_MENU_RHS, ARGS_MENU,
     RANGE|NOTADR|ZEROR|EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdCopy,            "copy",         &parse_address,
     ARG_ADDR_ADDR, ARGS_ADDR,
     RANGE|WHOLEFOLD|EXTRA|TRLBAR|CMDWIN|MODIFY),
  EX(kCmdColder,          "colder",       NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|COUNT|TRLBAR),
  EX(kCmdColorscheme,     "colorscheme",  &parse_rest_allow_empty,
     ARG_NAME_NAME, ARGS_NAME,
     WORD1|TRLBAR|CMDWIN),
  EX(kCmdCommand,         "command",      &parse_command,
     ARG_CMD_COMMAND, ARGS_CMD,
     EXTRA|BANG|NOTRLCOM|USECTRLV|CMDWIN | LITERAL),
  EX(kCmdComclear,        "comclear",     NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     TRLBAR|CMDWIN),
  EX(kCmdCompiler,        "compiler",     &parse_rest_allow_empty,
     ARG_NAME_NAME, ARGS_NAME,
     BANG|TRLBAR|WORD1|CMDWIN),
  EX(kCmdContinue,        "continue",     NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     TRLBAR|SBOXOK|CMDWIN),
  EX(kCmdConfirm,         "confirm",      NOFUNC,
     ARG_MODIFIER_CMD, ARGS_MODIFIER,
     NEEDARG|EXTRA|NOTRLCOM|CMDWIN | ISMODIFIER),
  EX(kCmdCopen,           "copen",        NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|COUNT|TRLBAR),
  EX(kCmdCprevious,       "cprevious",    NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|COUNT|TRLBAR|BANG),
  EX(kCmdCpfile,          "cpfile",       NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|COUNT|TRLBAR|BANG),
  EX(kCmdCquit,           "cquit",        NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     TRLBAR|BANG),
  EX(kCmdCrewind,         "crewind",      NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|COUNT|TRLBAR|BANG),
  EX(kCmdCscope,          "cscope",       &parse_cscope,
     ARG_SUBCMD, ARGS_SUBCMD,
     EXTRA|NOTRLCOM),
  EX(kCmdCstag,           "cstag",        &parse_rest_line,
     ARG_CSTAG_TAG, ARGS_CSTAG,
     BANG|TRLBAR|WORD1),
  EX(kCmdCunmap,          "cunmap",       &parse_unmap,
     ARG_UNMAP_LHS, ARGS_UNMAP,
     EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdCunabbrev,       "cunabbrev",    &parse_unmap,
     ARG_UNMAP_LHS, ARGS_UNMAP,
     EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdCunmenu,         "cunmenu",      &parse_unmenu,
     ARG_UNMENU_LHS, ARGS_UNMENU,
     EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdCwindow,         "cwindow",      NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|COUNT|TRLBAR),
  EX(kCmdDelete,          "delete",       NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|WHOLEFOLD|REGSTR|COUNT|TRLBAR|CMDWIN|MODIFY),
  EX(kCmdDelmarks,        "delmarks",     &parse_delmarks,
     ARG_NAME_NAME, ARGS_NAME,
     BANG|EXTRA|TRLBAR|CMDWIN),
  EX(kCmdDebug,           "debug",        &parse_do,
     ARG_MODIFIER_CMD, ARGS_MODIFIER,
     NEEDARG|EXTRA|NOTRLCOM|SBOXOK|CMDWIN | LITERAL),
  EX(kCmdDebuggreedy,     "debuggreedy",  NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|ZEROR|TRLBAR|CMDWIN),
  EX(kCmdDelcommand,      "delcommand",   &parse_rest_line,
     ARG_NAME_NAME, ARGS_NAME,
     NEEDARG|WORD1|TRLBAR|CMDWIN),
  EX(kCmdDelfunction,     "delfunction",  &parse_lvals,
     ARG_EXPR_EXPR, ARGS_EXPR,
     NEEDARG|WORD1|CMDWIN | LITERAL),
  EX(kCmdDisplay,         "display",      &parse_display,
     ARG_NAME_NAME, ARGS_NAME,
     EXTRA|NOTRLCOM|TRLBAR|SBOXOK|CMDWIN),
  EX(kCmdDiffupdate,      "diffupdate",   NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     BANG|TRLBAR),
  EX(kCmdDiffget,         "diffget",      NOFUNC,
     ARG_SO_FILES, ARGS_SO,
     RANGE|EXTRA|TRLBAR|MODIFY|BUFNAME),
  EX(kCmdDiffoff,         "diffoff",      NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     BANG|TRLBAR),
  EX(kCmdDiffpatch,       "diffpatch",    NOFUNC,
     ARG_SO_FILES, ARGS_SO,
     EXTRA|FILE1|TRLBAR|MODIFY),
  EX(kCmdDiffput,         "diffput",      NOFUNC,
     ARG_SO_FILES, ARGS_SO,
     RANGE|EXTRA|TRLBAR|BUFNAME),
  EX(kCmdDiffsplit,       "diffsplit",    NOFUNC,
     ARG_SO_FILES, ARGS_SO,
     EXTRA|FILE1|TRLBAR),
  EX(kCmdDiffthis,        "diffthis",     NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     TRLBAR),
  EX(kCmdDigraphs,        "digraphs",     &parse_digraphs,
     ARG_DIG_CHARS, ARGS_DIG,
     EXTRA|TRLBAR|CMDWIN),
  EX(kCmdDjump,           "djump",        &parse_regex,
     ARG_REG_REG, ARGS_REG,
     BANG|RANGE|DFLALL|WHOLEFOLD|EXTRA|COUNT),
  EX(kCmdDlist,           "dlist",        &parse_regex,
     ARG_REG_REG, ARGS_REG,
     BANG|RANGE|DFLALL|WHOLEFOLD|EXTRA|CMDWIN),
  EX(kCmdDoautocmd,       "doautocmd",    &parse_doautocmd,
     ARG_DOAU_FNAME, ARGS_DOAU,
     EXTRA|TRLBAR|CMDWIN),
  EX(kCmdDoautoall,       "doautoall",    &parse_doautocmd,
     ARG_DOAU_FNAME, ARGS_DOAU,
     EXTRA|TRLBAR|CMDWIN),
  EX(kCmdDrop,            "drop",         NOFUNC,
     ARG_E_FILES, ARGS_E,
     FILES|EDITCMD|NEEDARG|ARGOPT|TRLBAR),
  EX(kCmdDsearch,         "dsearch",      &parse_regex,
     ARG_REG_REG, ARGS_REG,
     BANG|RANGE|DFLALL|WHOLEFOLD|EXTRA|CMDWIN|COUNT),
  EX(kCmdDsplit,          "dsplit",       &parse_regex,
     ARG_REG_REG, ARGS_REG,
     BANG|RANGE|DFLALL|WHOLEFOLD|EXTRA|COUNT),
  EX(kCmdEdit,            "edit",         NOFUNC,
     ARG_E_FILES, ARGS_E,
     BANG|FILE1|EDITCMD|ARGOPT|TRLBAR),
  EX(kCmdEarlier,         "earlier",      &parse_later,
     ARG_LATER_COUNT, ARGS_LATER,
     TRLBAR|EXTRA|NOSPC|CMDWIN),
  EX(kCmdEcho,            "echo",         &parse_expr_seq_cmd,
     ARG_EXPRS_EXPRS, ARGS_EXPRS,
     EXTRA|NOTRLCOM|SBOXOK|CMDWIN | ISEXPR),
  EX(kCmdEchoerr,         "echoerr",      &parse_expr_seq_cmd,
     ARG_EXPRS_EXPRS, ARGS_EXPRS,
     EXTRA|NOTRLCOM|SBOXOK|CMDWIN | ISEXPR),
  // XXX Allowing :echohl to accept no arguments or not filter out group names
  //     that contain characters like bar makes no sense, but it is how it was
  //     implemented in Vim.
  EX(kCmdEchohl,          "echohl",       &parse_rest_allow_empty,
     ARG_NAME_NAME, ARGS_NAME,
     EXTRA|TRLBAR|SBOXOK|CMDWIN),
  EX(kCmdEchomsg,         "echomsg",      &parse_expr_seq_cmd,
     ARG_EXPRS_EXPRS, ARGS_EXPRS,
     EXTRA|NOTRLCOM|SBOXOK|CMDWIN | ISEXPR),
  EX(kCmdEchon,           "echon",        &parse_expr_seq_cmd,
     ARG_EXPRS_EXPRS, ARGS_EXPRS,
     EXTRA|NOTRLCOM|SBOXOK|CMDWIN | ISEXPR),
  EX(kCmdElse,            "else",         NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     TRLBAR|SBOXOK|CMDWIN),
  EX(kCmdElseif,          "elseif",       &parse_expr_cmd,
     ARG_EXPR_EXPR, ARGS_EXPR,
     EXTRA|NOTRLCOM|SBOXOK|CMDWIN | ISEXPR),
  EX(kCmdEmenu,           "emenu",        &parse_menu,
     ARG_MENU_RHS, ARGS_MENU,
     NEEDARG|EXTRA|TRLBAR|NOTRLCOM|RANGE|NOTADR|CMDWIN),
  EX(kCmdEndif,           "endif",        NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     TRLBAR|SBOXOK|CMDWIN),
  EX(kCmdEndfunction,     "endfunction",  NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     TRLBAR|CMDWIN),
  EX(kCmdEndfor,          "endfor",       NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     TRLBAR|SBOXOK|CMDWIN),
  EX(kCmdEndtry,          "endtry",       NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     TRLBAR|SBOXOK|CMDWIN),
  EX(kCmdEndwhile,        "endwhile",     NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     TRLBAR|SBOXOK|CMDWIN),
  EX(kCmdEnew,            "enew",         NOFUNC,
     ARG_E_FILES, ARGS_E,
     BANG|TRLBAR),
  EX(kCmdEx,              "ex",           NOFUNC,
     ARG_E_FILES, ARGS_E,
     BANG|FILE1|EDITCMD|ARGOPT|TRLBAR),
  EX(kCmdExecute,         "execute",      &parse_expr_seq_cmd,
     ARG_EXPRS_EXPRS, ARGS_EXPRS,
     EXTRA|NOTRLCOM|SBOXOK|CMDWIN | ISEXPR),
  EX(kCmdExit,            "exit",         NOFUNC,
     ARG_EXIT_FILES, ARGS_EXIT,
     RANGE|WHOLEFOLD|BANG|FILE1|ARGOPT|DFLALL|TRLBAR|CMDWIN),
  EX(kCmdExusage,         "exusage",      NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     TRLBAR),
  EX(kCmdFile,            "file",         &parse_rest_allow_empty,
     ARG_NAME_NAME, ARGS_NAME,
     RANGE|NOTADR|ZEROR|BANG|FILE1|TRLBAR),
  EX(kCmdFiles,           "files",        NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     BANG|TRLBAR|CMDWIN),
  EX(kCmdFiletype,        "filetype",     &parse_filetype,
     ARG_FT_FLAGS, ARGS_FT,
     EXTRA|TRLBAR|CMDWIN),
  EX(kCmdFind,            "find",         NOFUNC,
     ARG_E_FILES, ARGS_E,
     RANGE|NOTADR|BANG|FILE1|EDITCMD|ARGOPT|TRLBAR),
  EX(kCmdFinally,         "finally",      NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     TRLBAR|SBOXOK|CMDWIN),
  EX(kCmdFinish,          "finish",       NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     TRLBAR|SBOXOK|CMDWIN),
  EX(kCmdFirst,           "first",        NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     EXTRA|BANG|EDITCMD|ARGOPT|TRLBAR),
  EX(kCmdFixdel,          "fixdel",       NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     TRLBAR|CMDWIN),
  EX(kCmdFold,            "fold",         NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|WHOLEFOLD|TRLBAR|SBOXOK|CMDWIN),
  EX(kCmdFoldclose,       "foldclose",    NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|BANG|WHOLEFOLD|TRLBAR|SBOXOK|CMDWIN),
  EX(kCmdFolddoopen,      "folddoopen",   &parse_do,
     ARG_DO_CMD, ARGS_DO,
     RANGE|DFLALL|NEEDARG|EXTRA|NOTRLCOM | LITERAL),
  EX(kCmdFolddoclosed,    "folddoclosed", &parse_do,
     ARG_DO_CMD, ARGS_DO,
     RANGE|DFLALL|NEEDARG|EXTRA|NOTRLCOM | LITERAL),
  EX(kCmdFoldopen,        "foldopen",     NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|BANG|WHOLEFOLD|TRLBAR|SBOXOK|CMDWIN),
  EX(kCmdFor,             "for",          &parse_for,
     ARG_FOR_RHS, ARGS_FOR,
     EXTRA|NOTRLCOM|SBOXOK|CMDWIN | ISEXPR),
  EX(kCmdFunction,        "function",     &parse_function,
     ARG_FUNC_FLAGS, ARGS_FUNC,
     EXTRA|BANG|CMDWIN | ISEXPR),
  EX(kCmdGlobal,          "global",       &parse_global,
     ARG_G_REG, ARGS_G,
     RANGE|WHOLEFOLD|BANG|EXTRA|DFLALL|SBOXOK|CMDWIN | LITERAL),
  EX(kCmdGoto,            "goto",         NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|COUNT|TRLBAR|SBOXOK|CMDWIN),
  EX(kCmdGrep,            "grep",         &parse_make,
     ARG_SHELL_ARGS, ARGS_SHELL,
     RANGE|NOTADR|BANG|NEEDARG|EXTRA|NOTRLCOM|TRLBAR),
  EX(kCmdGrepadd,         "grepadd",      &parse_make,
     ARG_SHELL_ARGS, ARGS_SHELL,
     RANGE|NOTADR|BANG|NEEDARG|EXTRA|NOTRLCOM|TRLBAR),
  EX(kCmdGui,             "gui",          &parse_gui,
     ARG_GUI_FG, ARGS_GUI,
     BANG|EDITCMD|ARGOPT|TRLBAR|CMDWIN | EXTRA|LITERAL),
  EX(kCmdGvim,            "gvim",         &parse_gui,
     ARG_GUI_FG, ARGS_GUI,
     BANG|EDITCMD|ARGOPT|TRLBAR|CMDWIN | EXTRA|LITERAL),
  EX(kCmdHelp,            "help",         &parse_help,
     ARG_HELP_LANG, ARGS_HELP,
     EXTRA|NOTRLCOM | LITERAL),
  EX(kCmdHelpfind,        "helpfind",     NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     EXTRA|NOTRLCOM),
  EX(kCmdHelpgrep,        "helpgrep",     &parse_helpgrep,
     ARG_HELPG_LANG, ARGS_HELPG,
     EXTRA|NOTRLCOM|NEEDARG | LITERAL),
  /* ++t is in count */
  EX(kCmdHelptags,        "helptags",     &parse_helptags,
     ARG_HT_MAIN, ARGS_HT,
     NEEDARG|TRLBAR|CMDWIN | EXTRA|LITERAL),
  EX(kCmdHardcopy,        "hardcopy",     &parse_rest_allow_empty,
     ARG_NAME_NAME, ARGS_NAME,
     RANGE|COUNT|EXTRA|TRLBAR|DFLALL|BANG),
  EX(kCmdHighlight,       "highlight",    &parse_highlight,
     ARG_HI_GUISP, ARGS_HI,
     BANG|EXTRA|TRLBAR|SBOXOK|CMDWIN),
  EX(kCmdHide,            "hide",         NOFUNC,
     ARG_MODIFIER_CMD, ARGS_MODIFIER,
     BANG|EXTRA|NOTRLCOM | ISMODIFIER),
  EX(kCmdHistory,         "history",      &parse_history,
     ARG_HIST_LAST, ARGS_HIST,
     EXTRA|TRLBAR|CMDWIN),
  EX(kCmdInsert,          "insert",       &parse_append,
     ARG_APPEND_LINES, ARGS_APPEND,
     BANG|RANGE|TRLBAR|CMDWIN|MODIFY),
  EX(kCmdIabbrev,         "iabbrev",      &parse_map,
     ARG_MAP_EXPR, ARGS_MAP,
     EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdIabclear,        "iabclear",     &parse_mapclear,
     ARG_CLEAR_BUFFER, ARGS_CLEAR,
     EXTRA|TRLBAR|CMDWIN),
  EX(kCmdIf,              "if",           &parse_expr_cmd,
     ARG_EXPR_EXPR, ARGS_EXPR,
     EXTRA|NOTRLCOM|SBOXOK|CMDWIN | ISEXPR),
  EX(kCmdIjump,           "ijump",        &parse_regex,
     ARG_REG_REG, ARGS_REG,
     BANG|RANGE|DFLALL|WHOLEFOLD|EXTRA|COUNT),
  EX(kCmdIlist,           "ilist",        &parse_regex,
     ARG_REG_REG, ARGS_REG,
     BANG|RANGE|DFLALL|WHOLEFOLD|EXTRA|CMDWIN),
  EX(kCmdImap,            "imap",         &parse_map,
     ARG_MAP_EXPR, ARGS_MAP,
     EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdImapclear,       "imapclear",    &parse_mapclear,
     ARG_CLEAR_BUFFER, ARGS_CLEAR,
     EXTRA|TRLBAR|CMDWIN),
  EX(kCmdImenu,           "imenu",        &parse_menu,
     ARG_MENU_RHS, ARGS_MENU,
     RANGE|NOTADR|ZEROR|EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdInoremap,        "inoremap",     &parse_map,
     ARG_MAP_EXPR, ARGS_MAP,
     EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdInoreabbrev,     "inoreabbrev",  &parse_map,
     ARG_MAP_EXPR, ARGS_MAP,
     EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdInoremenu,       "inoremenu",    &parse_menu,
     ARG_MENU_RHS, ARGS_MENU,
     RANGE|NOTADR|ZEROR|EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdIntro,           "intro",        NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     TRLBAR|CMDWIN),
  EX(kCmdIsearch,         "isearch",      &parse_regex,
     ARG_REG_REG, ARGS_REG,
     BANG|RANGE|DFLALL|WHOLEFOLD|EXTRA|CMDWIN|COUNT),
  EX(kCmdIsplit,          "isplit",       &parse_regex,
     ARG_REG_REG, ARGS_REG,
     BANG|RANGE|DFLALL|WHOLEFOLD|EXTRA|COUNT),
  EX(kCmdIunmap,          "iunmap",       &parse_unmap,
     ARG_UNMAP_LHS, ARGS_UNMAP,
     EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdIunabbrev,       "iunabbrev",    &parse_unmap,
     ARG_UNMAP_LHS, ARGS_UNMAP,
     EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdIunmenu,         "iunmenu",      &parse_unmenu,
     ARG_UNMENU_LHS, ARGS_UNMENU,
     EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdJoin,            "join",         NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     BANG|RANGE|WHOLEFOLD|COUNT|EXFLAGS|TRLBAR|CMDWIN|MODIFY),
  EX(kCmdJumps,           "jumps",        NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     TRLBAR|CMDWIN),
  EX(kCmdK,               "k",            &parse_mark,
     ARG_MARK_CHAR, ARGS_MARK,
     RANGE|WORD1|TRLBAR|SBOXOK|CMDWIN),
  EX(kCmdKeepmarks,       "keepmarks",    NOFUNC,
     ARG_MODIFIER_CMD, ARGS_MODIFIER,
     NEEDARG|EXTRA|NOTRLCOM | ISMODIFIER),
  EX(kCmdKeepjumps,       "keepjumps",    NOFUNC,
     ARG_MODIFIER_CMD, ARGS_MODIFIER,
     NEEDARG|EXTRA|NOTRLCOM | ISMODIFIER),
  EX(kCmdKeeppatterns,    "keeppatterns", NOFUNC,
     ARG_MODIFIER_CMD, ARGS_MODIFIER,
     NEEDARG|EXTRA|NOTRLCOM | ISMODIFIER),
  EX(kCmdKeepalt,         "keepalt",      NOFUNC,
     ARG_MODIFIER_CMD, ARGS_MODIFIER,
     NEEDARG|EXTRA|NOTRLCOM | ISMODIFIER),
  EX(kCmdList,            "list",         NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|WHOLEFOLD|COUNT|EXFLAGS|TRLBAR|CMDWIN),
  EX(kCmdLNext,           "lNext",        NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|COUNT|TRLBAR|BANG),
  EX(kCmdLNfile,          "lNfile",       NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|COUNT|TRLBAR|BANG),
  EX(kCmdLast,            "last",         NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     EXTRA|BANG|EDITCMD|ARGOPT|TRLBAR),
  EX(kCmdLanguage,        "language",     &parse_language,
     ARG_LANG_LANG, ARGS_LANG,
     EXTRA|TRLBAR|CMDWIN),
  EX(kCmdLaddexpr,        "laddexpr",     &parse_expr_cmd,
     ARG_EXPR_EXPR, ARGS_EXPR,
     NEEDARG|WORD1|NOTRLCOM|TRLBAR | ISEXPR),
  EX(kCmdLaddbuffer,      "laddbuffer",   &parse_cbuffer,
     ARG_NUMBER_NUMBER, ARGS_NUMBER,
     RANGE|NOTADR|WORD1|TRLBAR),
  EX(kCmdLaddfile,        "laddfile",     NOFUNC,
     ARG_SO_FILES, ARGS_SO,
     TRLBAR|FILE1),
  EX(kCmdLater,           "later",        &parse_later,
     ARG_LATER_COUNT, ARGS_LATER,
     TRLBAR|EXTRA|NOSPC|CMDWIN),
  EX(kCmdLbuffer,         "lbuffer",      &parse_cbuffer,
     ARG_NUMBER_NUMBER, ARGS_NUMBER,
     BANG|RANGE|NOTADR|WORD1|TRLBAR),
  EX(kCmdLcd,             "lcd",          NOFUNC,
     ARG_SO_FILES, ARGS_SO,
     BANG|FILE1|TRLBAR|CMDWIN),
  EX(kCmdLchdir,          "lchdir",       NOFUNC,
     ARG_SO_FILES, ARGS_SO,
     BANG|FILE1|TRLBAR|CMDWIN),
  EX(kCmdLclose,          "lclose",       NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|COUNT|TRLBAR),
  EX(kCmdLcscope,         "lcscope",      &parse_cscope,
     ARG_SUBCMD, ARGS_SUBCMD,
     EXTRA|NOTRLCOM),
  EX(kCmdLeft,            "left",         &parse_number,
     ARG_NUMBER_NUMBER, ARGS_NUMBER,
     TRLBAR|RANGE|WHOLEFOLD|EXTRA|CMDWIN|MODIFY),
  EX(kCmdLeftabove,       "leftabove",    NOFUNC,
     ARG_MODIFIER_CMD, ARGS_MODIFIER,
     NEEDARG|EXTRA|NOTRLCOM | ISMODIFIER),
  EX(kCmdLet,             "let",          &parse_let,
     ARG_LET_RHS, ARGS_LET,
     EXTRA|NOTRLCOM|SBOXOK|CMDWIN | ISEXPR),
  EX(kCmdLexpr,           "lexpr",        &parse_expr_cmd,
     ARG_EXPR_EXPR, ARGS_EXPR,
     NEEDARG|WORD1|NOTRLCOM|TRLBAR|BANG | ISEXPR),
  EX(kCmdLfile,           "lfile",        NOFUNC,
     ARG_SO_FILES, ARGS_SO,
     TRLBAR|FILE1|BANG),
  EX(kCmdLfirst,          "lfirst",       NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|COUNT|TRLBAR|BANG),
  EX(kCmdLgetfile,        "lgetfile",     NOFUNC,
     ARG_SO_FILES, ARGS_SO,
     TRLBAR|FILE1),
  EX(kCmdLgetbuffer,      "lgetbuffer",   &parse_cbuffer,
     ARG_NUMBER_NUMBER, ARGS_NUMBER,
     RANGE|NOTADR|WORD1|TRLBAR),
  EX(kCmdLgetexpr,        "lgetexpr",     &parse_expr_cmd,
     ARG_EXPR_EXPR, ARGS_EXPR,
     NEEDARG|WORD1|NOTRLCOM|TRLBAR | ISEXPR),
  EX(kCmdLgrep,           "lgrep",        &parse_make,
     ARG_SHELL_ARGS, ARGS_SHELL,
     RANGE|NOTADR|BANG|NEEDARG|EXTRA|NOTRLCOM|TRLBAR),
  EX(kCmdLgrepadd,        "lgrepadd",     &parse_make,
     ARG_SHELL_ARGS, ARGS_SHELL,
     RANGE|NOTADR|BANG|NEEDARG|EXTRA|NOTRLCOM|TRLBAR),
  EX(kCmdLhelpgrep,       "lhelpgrep",    &parse_helpgrep,
     ARG_HELPG_LANG, ARGS_HELPG,
     EXTRA|NOTRLCOM|NEEDARG | LITERAL),
  EX(kCmdLl,              "ll",           NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|COUNT|TRLBAR|BANG),
  EX(kCmdLlast,           "llast",        NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|COUNT|TRLBAR|BANG),
  EX(kCmdLlist,           "llist",        &parse_clist,
     ARG_CLIST_LAST, ARGS_CLIST,
     BANG|EXTRA|TRLBAR|CMDWIN),
  EX(kCmdLmap,            "lmap",         &parse_map,
     ARG_MAP_EXPR, ARGS_MAP,
     EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdLmapclear,       "lmapclear",    &parse_mapclear,
     ARG_CLEAR_BUFFER, ARGS_CLEAR,
     EXTRA|TRLBAR|CMDWIN),
  EX(kCmdLmake,           "lmake",        &parse_make,
     ARG_SHELL_ARGS, ARGS_SHELL,
     BANG|EXTRA|NOTRLCOM|TRLBAR),
  EX(kCmdLnoremap,        "lnoremap",     &parse_map,
     ARG_MAP_EXPR, ARGS_MAP,
     EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdLnext,           "lnext",        NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|COUNT|TRLBAR|BANG),
  EX(kCmdLnewer,          "lnewer",       NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|COUNT|TRLBAR),
  EX(kCmdLnfile,          "lnfile",       NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|COUNT|TRLBAR|BANG),
  EX(kCmdLoadview,        "loadview",     &parse_loadview,
     ARG_LOADVIEW_NR, ARGS_LOADVIEW,
     TRLBAR | EXTRA),
  EX(kCmdLoadkeymap,      "loadkeymap",   &parse_loadkeymap,
     ARG_LKMAP_COMS, ARGS_LKMAP,
     CMDWIN),
  EX(kCmdLockmarks,       "lockmarks",    NOFUNC,
     ARG_MODIFIER_CMD, ARGS_MODIFIER,
     NEEDARG|EXTRA|NOTRLCOM | ISMODIFIER),
  EX(kCmdLockvar,         "lockvar",      &parse_lockvar,
     ARG_LOCKVAR_DEPTH, ARGS_LOCKVAR,
     BANG|EXTRA|NEEDARG|SBOXOK|CMDWIN | ISEXPR),
  EX(kCmdLolder,          "lolder",       NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|COUNT|TRLBAR),
  EX(kCmdLopen,           "lopen",        NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|COUNT|TRLBAR),
  EX(kCmdLprevious,       "lprevious",    NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|COUNT|TRLBAR|BANG),
  EX(kCmdLpfile,          "lpfile",       NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|COUNT|TRLBAR|BANG),
  EX(kCmdLrewind,         "lrewind",      NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|COUNT|TRLBAR|BANG),
  EX(kCmdLtag,            "ltag",         &parse_regex,
     ARG_REG_REG, ARGS_REG,
     NOTADR|TRLBAR|BANG|WORD1),
  EX(kCmdLua,             "lua",          &parse_script,
     ARG_APPEND_LINES, ARGS_APPEND,
     RANGE|EXTRA|NEEDARG|CMDWIN),
  EX(kCmdLuado,           "luado",        &parse_rest_line,
     ARG_NAME_NAME, ARGS_NAME,
     RANGE|DFLALL|EXTRA|NEEDARG|CMDWIN | LITERAL),
  EX(kCmdLuafile,         "luafile",      NOFUNC,
     ARG_SO_FILES, ARGS_SO,
     RANGE|FILE1|NEEDARG|CMDWIN),
  EX(kCmdLunmap,          "lunmap",       &parse_unmap,
     ARG_UNMAP_LHS, ARGS_UNMAP,
     EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdLvimgrep,        "lvimgrep",     &parse_vimgrep,
     ARG_VIMG_REG, ARGS_VIMG,
     RANGE|NOTADR|BANG|NEEDARG|EXTRA|NOTRLCOM|TRLBAR | ISGREP),
  EX(kCmdLvimgrepadd,     "lvimgrepadd",  &parse_vimgrep,
     ARG_VIMG_REG, ARGS_VIMG,
     RANGE|NOTADR|BANG|NEEDARG|EXTRA|NOTRLCOM|TRLBAR | ISGREP),
  EX(kCmdLwindow,         "lwindow",      NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|COUNT|TRLBAR),
  EX(kCmdLs,              "ls",           NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     BANG|TRLBAR|CMDWIN),
  EX(kCmdMove,            "move",         &parse_address,
     ARG_ADDR_ADDR, ARGS_ADDR,
     RANGE|WHOLEFOLD|EXTRA|TRLBAR|CMDWIN|MODIFY),
  EX(kCmdMark,            "mark",         &parse_mark,
     ARG_MARK_CHAR, ARGS_MARK,
     RANGE|WORD1|TRLBAR|SBOXOK|CMDWIN),
  EX(kCmdMake,            "make",         &parse_make,
     ARG_SHELL_ARGS, ARGS_SHELL,
     BANG|EXTRA|NOTRLCOM|TRLBAR),
  EX(kCmdMap,             "map",          &parse_map,
     ARG_MAP_EXPR, ARGS_MAP,
     BANG|EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdMapclear,        "mapclear",     &parse_mapclear,
     ARG_CLEAR_BUFFER, ARGS_CLEAR,
     EXTRA|BANG|TRLBAR|CMDWIN),
  EX(kCmdMarks,           "marks",        &parse_marks,
     ARG_NAME_NAME, ARGS_NAME,
     EXTRA|TRLBAR|CMDWIN),
  EX(kCmdMatch,           "match",        &parse_match,
     ARG_MATCH_REG, ARGS_MATCH,
     RANGE|NOTADR|EXTRA|CMDWIN | LITERAL),
  EX(kCmdMenu,            "menu",         &parse_menu,
     ARG_MENU_RHS, ARGS_MENU,
     RANGE|NOTADR|ZEROR|BANG|EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdMenutranslate,   "menutranslate", &parse_menutranslate,
     ARG_MT_TO_TEXT, ARGS_MT,
     EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN | LITERAL),
  EX(kCmdMessages,        "messages",     NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     TRLBAR|CMDWIN),
  EX(kCmdMkexrc,          "mkexrc",       NOFUNC,
     ARG_SO_FILES, ARGS_SO,
     BANG|FILE1|TRLBAR|CMDWIN),
  EX(kCmdMksession,       "mksession",    NOFUNC,
     ARG_MKS_ASCII, ARGS_MKS,
     BANG|FILE1|TRLBAR),
  EX(kCmdMkspell,         "mkspell",      &parse_mkspell,
     ARG_MKS_ASCII, ARGS_MKS,
     BANG|NEEDARG|EXTRA|NOTRLCOM|TRLBAR),
  EX(kCmdMkvimrc,         "mkvimrc",      NOFUNC,
     ARG_SO_FILES, ARGS_SO,
     BANG|FILE1|TRLBAR|CMDWIN),
  EX(kCmdMkview,          "mkview",       NOFUNC,
     ARG_SO_FILES, ARGS_SO,
     BANG|FILE1|TRLBAR),
  EX(kCmdMode,            "mode",         &parse_rest_allow_empty,
     ARG_NAME_NAME, ARGS_NAME,
     WORD1|TRLBAR|CMDWIN),
  EX(kCmdMzscheme,        "mzscheme",     &parse_script,
     ARG_APPEND_LINES, ARGS_APPEND,
     RANGE|EXTRA|DFLALL|NEEDARG|CMDWIN|SBOXOK),
  EX(kCmdMzfile,          "mzfile",       NOFUNC,
     ARG_SO_FILES, ARGS_SO,
     RANGE|FILE1|NEEDARG|CMDWIN),
  EX(kCmdNext,            "next",         NOFUNC,
     ARG_E_FILES, ARGS_E,
     RANGE|NOTADR|BANG|FILES|EDITCMD|ARGOPT|TRLBAR),
  EX(kCmdNbkey,           "nbkey",        &parse_rest_line,
     ARG_NAME_NAME, ARGS_NAME,
     EXTRA|NOTADR|NEEDARG),
  EX(kCmdNbclose,         "nbclose",      NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     TRLBAR|CMDWIN),
  EX(kCmdNbstart,         "nbstart",      &parse_rest_allow_empty,
     ARG_NAME_NAME, ARGS_NAME,
     WORD1|TRLBAR|CMDWIN),
  EX(kCmdNew,             "new",          NOFUNC,
     ARG_E_FILES, ARGS_E,
     BANG|FILE1|RANGE|NOTADR|EDITCMD|ARGOPT|TRLBAR),
  EX(kCmdNmap,            "nmap",         &parse_map,
     ARG_MAP_EXPR, ARGS_MAP,
     EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdNmapclear,       "nmapclear",    &parse_mapclear,
     ARG_CLEAR_BUFFER, ARGS_CLEAR,
     EXTRA|TRLBAR|CMDWIN),
  EX(kCmdNmenu,           "nmenu",        &parse_menu,
     ARG_MENU_RHS, ARGS_MENU,
     RANGE|NOTADR|ZEROR|EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdNnoremap,        "nnoremap",     &parse_map,
     ARG_MAP_EXPR, ARGS_MAP,
     EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdNnoremenu,       "nnoremenu",    &parse_menu,
     ARG_MENU_RHS, ARGS_MENU,
     RANGE|NOTADR|ZEROR|EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdNoremap,         "noremap",      &parse_map,
     ARG_MAP_EXPR, ARGS_MAP,
     BANG|EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdNoautocmd,       "noautocmd",    NOFUNC,
     ARG_MODIFIER_CMD, ARGS_MODIFIER,
     NEEDARG|EXTRA|NOTRLCOM | ISMODIFIER),
  EX(kCmdNoswapfile,      "noswapfile",   NOFUNC,
     ARG_MODIFIER_CMD, ARGS_MODIFIER,
     NEEDARG|EXTRA|NOTRLCOM | ISMODIFIER),
  EX(kCmdNohlsearch,      "nohlsearch",   NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     TRLBAR|SBOXOK|CMDWIN),
  EX(kCmdNoreabbrev,      "noreabbrev",   &parse_map,
     ARG_MAP_EXPR, ARGS_MAP,
     EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdNoremenu,        "noremenu",     &parse_menu,
     ARG_MENU_RHS, ARGS_MENU,
     RANGE|NOTADR|ZEROR|BANG|EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdNormal,          "normal",       &parse_rest_line,
     ARG_NORMAL_STR, ARGS_NORMAL,
     RANGE|BANG|EXTRA|NEEDARG|NOTRLCOM|USECTRLV|SBOXOK|CMDWIN | LITERAL),
  EX(kCmdNumber,          "number",       NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|WHOLEFOLD|COUNT|EXFLAGS|TRLBAR|CMDWIN),
  EX(kCmdNunmap,          "nunmap",       &parse_unmap,
     ARG_UNMAP_LHS, ARGS_UNMAP,
     EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdNunmenu,         "nunmenu",      &parse_unmenu,
     ARG_UNMENU_LHS, ARGS_UNMENU,
     EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdOpen,            "open",         &parse_open,
     ARG_OPEN_REGEX, ARGS_OPEN,
     RANGE|BANG|EXTRA),
  EX(kCmdOldfiles,        "oldfiles",     NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     BANG|TRLBAR|SBOXOK|CMDWIN),
  EX(kCmdOmap,            "omap",         &parse_map,
     ARG_MAP_EXPR, ARGS_MAP,
     EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdOmapclear,       "omapclear",    &parse_mapclear,
     ARG_CLEAR_BUFFER, ARGS_CLEAR,
     EXTRA|TRLBAR|CMDWIN),
  EX(kCmdOmenu,           "omenu",        &parse_menu,
     ARG_MENU_RHS, ARGS_MENU,
     RANGE|NOTADR|ZEROR|EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdOnly,            "only",         NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     BANG|TRLBAR),
  EX(kCmdOnoremap,        "onoremap",     &parse_map,
     ARG_MAP_EXPR, ARGS_MAP,
     EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdOnoremenu,       "onoremenu",    &parse_menu,
     ARG_MENU_RHS, ARGS_MENU,
     RANGE|NOTADR|ZEROR|EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdOptions,         "options",      NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     TRLBAR),
  EX(kCmdOunmap,          "ounmap",       &parse_unmap,
     ARG_UNMAP_LHS, ARGS_UNMAP,
     EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdOunmenu,         "ounmenu",      &parse_unmenu,
     ARG_UNMENU_LHS, ARGS_UNMENU,
     EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdOwnsyntax,       "ownsyntax",    &parse_rest_allow_empty,
     ARG_NAME_NAME, ARGS_NAME,
     EXTRA|NOTRLCOM|SBOXOK|CMDWIN),
  EX(kCmdPrint,           "print",        NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|WHOLEFOLD|COUNT|EXFLAGS|TRLBAR|CMDWIN|SBOXOK),
  EX(kCmdPclose,          "pclose",       NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     BANG|TRLBAR),
  EX(kCmdPerl,            "perl",         &parse_script,
     ARG_APPEND_LINES, ARGS_APPEND,
     RANGE|EXTRA|DFLALL|NEEDARG|SBOXOK|CMDWIN),
  EX(kCmdPerldo,          "perldo",       &parse_rest_line,
     ARG_NAME_NAME, ARGS_NAME,
     RANGE|EXTRA|DFLALL|NEEDARG|CMDWIN | LITERAL),
  EX(kCmdPedit,           "pedit",        NOFUNC,
     ARG_E_FILES, ARGS_E,
     BANG|FILE1|EDITCMD|ARGOPT|TRLBAR),
  EX(kCmdPop,             "pop",          NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|BANG|COUNT|TRLBAR|ZEROR),
  EX(kCmdPopup,           "popup",        &parse_popup,
     ARG_POPUP_NAME, ARGS_POPUP,
     NEEDARG|EXTRA|BANG|TRLBAR|NOTRLCOM|CMDWIN),
  EX(kCmdPpop,            "ppop",         NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|BANG|COUNT|TRLBAR|ZEROR),
  EX(kCmdPreserve,        "preserve",     NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     TRLBAR),
  EX(kCmdPrevious,        "previous",     NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     EXTRA|RANGE|NOTADR|COUNT|BANG|EDITCMD|ARGOPT|TRLBAR),
  EX(kCmdPromptfind,      "promptfind",   &parse_rest_allow_empty,
     ARG_NAME_NAME, ARGS_NAME,
     EXTRA|NOTRLCOM|CMDWIN),
  EX(kCmdPromptrepl,      "promptrepl",   &parse_rest_allow_empty,
     ARG_NAME_NAME, ARGS_NAME,
     EXTRA|NOTRLCOM|CMDWIN),
  EX(kCmdProfile,         "profile",      &parse_breakadd,
     ARG_PROFILE_PAT, ARGS_PROFILE,
     BANG|EXTRA|TRLBAR|CMDWIN),
  EX(kCmdProfdel,         "profdel",      &parse_breakadd,
     ARG_PROFILE_PAT, ARGS_PROFILE,
     EXTRA|TRLBAR|CMDWIN),
  EX(kCmdPsearch,         "psearch",      &parse_regex,
     ARG_REG_REG, ARGS_REG,
     BANG|RANGE|WHOLEFOLD|DFLALL|EXTRA|COUNT),
  EX(kCmdPtag,            "ptag",         &parse_regex,
     ARG_REG_REG, ARGS_REG,
     RANGE|NOTADR|BANG|WORD1|TRLBAR|ZEROR),
  EX(kCmdPtNext,          "ptNext",       NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|BANG|TRLBAR|ZEROR),
  EX(kCmdPtfirst,         "ptfirst",      NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|BANG|TRLBAR|ZEROR),
  EX(kCmdPtjump,          "ptjump",       &parse_regex,
     ARG_REG_REG, ARGS_REG,
     BANG|TRLBAR|WORD1),
  EX(kCmdPtlast,          "ptlast",       NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     BANG|TRLBAR),
  EX(kCmdPtnext,          "ptnext",       NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|BANG|TRLBAR|ZEROR),
  EX(kCmdPtprevious,      "ptprevious",   NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|BANG|TRLBAR|ZEROR),
  EX(kCmdPtrewind,        "ptrewind",     NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|BANG|TRLBAR|ZEROR),
  EX(kCmdPtselect,        "ptselect",     &parse_regex,
     ARG_REG_REG, ARGS_REG,
     BANG|TRLBAR|WORD1),
  EX(kCmdPut,             "put",          NOFUNC,
     ARG_MARK_CHAR, ARGS_MARK,
     RANGE|WHOLEFOLD|BANG|REGSTR|TRLBAR|ZEROR|CMDWIN|MODIFY),
  EX(kCmdPwd,             "pwd",          NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     TRLBAR|CMDWIN),
  EX(kCmdPython,          "python",       &parse_script,
     ARG_APPEND_LINES, ARGS_APPEND,
     RANGE|EXTRA|NEEDARG|CMDWIN),
  EX(kCmdPydo,            "pydo",         &parse_rest_line,
     ARG_NAME_NAME, ARGS_NAME,
     RANGE|DFLALL|EXTRA|NEEDARG|CMDWIN | LITERAL),
  EX(kCmdPyfile,          "pyfile",       NOFUNC,
     ARG_SO_FILES, ARGS_SO,
     RANGE|FILE1|NEEDARG|CMDWIN),
  EX(kCmdPy3,             "py3",          &parse_script,
     ARG_APPEND_LINES, ARGS_APPEND,
     RANGE|EXTRA|NEEDARG|CMDWIN),
  EX(kCmdPy3do,           "py3do",        &parse_rest_line,
     ARG_NAME_NAME, ARGS_NAME,
     RANGE|DFLALL|EXTRA|NEEDARG|CMDWIN | LITERAL),
  EX(kCmdPython3,         "python3",      &parse_script,
     ARG_APPEND_LINES, ARGS_APPEND,
     RANGE|EXTRA|NEEDARG|CMDWIN),
  EX(kCmdPy3file,         "py3file",      NOFUNC,
     ARG_SO_FILES, ARGS_SO,
     RANGE|FILE1|NEEDARG|CMDWIN),
  EX(kCmdQuit,            "quit",         NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     BANG|TRLBAR|CMDWIN),
  EX(kCmdQuitall,         "quitall",      NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     BANG|TRLBAR),
  EX(kCmdQall,            "qall",         NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     BANG|TRLBAR|CMDWIN),
  EX(kCmdRead,            "read",         &parse_write,
     ARG_W_SHELL, ARGS_W,
     BANG|RANGE|WHOLEFOLD|ARGOPT|TRLBAR|ZEROR|CMDWIN|MODIFY | EXTRA|LITERAL),
  EX(kCmdRecover,         "recover",      NOFUNC,
     ARG_SO_FILES, ARGS_SO,
     BANG|FILE1|TRLBAR),
  EX(kCmdRedo,            "redo",         NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     TRLBAR|CMDWIN),
  EX(kCmdRedir,           "redir",        &parse_redir,
     ARG_REDIR_VAR, ARGS_REDIR,
     BANG|EXTRA|TRLBAR|CMDWIN),
  EX(kCmdRedraw,          "redraw",       NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     BANG|TRLBAR|CMDWIN),
  EX(kCmdRedrawstatus,    "redrawstatus", NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     BANG|TRLBAR|CMDWIN),
  EX(kCmdRegisters,       "registers",    &parse_display,
     ARG_NAME_NAME, ARGS_NAME,
     EXTRA|NOTRLCOM|TRLBAR|CMDWIN),
  EX(kCmdResize,          "resize",       &parse_resize,
     ARG_RESIZE_NUMBER, ARGS_RESIZE,
     RANGE|NOTADR|TRLBAR|WORD1),
  EX(kCmdRetab,           "retab",        &parse_retab,
     ARG_NO_ARGS, ARGS_NO,
     TRLBAR|RANGE|WHOLEFOLD|DFLALL|BANG|WORD1|CMDWIN|MODIFY),
  EX(kCmdReturn,          "return",       &parse_expr_cmd,
     ARG_EXPR_EXPR, ARGS_EXPR,
     EXTRA|NOTRLCOM|SBOXOK|CMDWIN | ISEXPR),
  EX(kCmdRewind,          "rewind",       NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     EXTRA|BANG|EDITCMD|ARGOPT|TRLBAR),
  EX(kCmdRight,           "right",        &parse_number,
     ARG_NUMBER_NUMBER, ARGS_NUMBER,
     TRLBAR|RANGE|WHOLEFOLD|EXTRA|CMDWIN|MODIFY),
  EX(kCmdRightbelow,      "rightbelow",   NOFUNC,
     ARG_MODIFIER_CMD, ARGS_MODIFIER,
     NEEDARG|EXTRA|NOTRLCOM | ISMODIFIER),
  EX(kCmdRuntime,         "runtime",      NOFUNC,
     ARG_SO_FILES, ARGS_SO,
     BANG|NEEDARG|FILES|TRLBAR|SBOXOK|CMDWIN),
  EX(kCmdRuby,            "ruby",         &parse_script,
     ARG_APPEND_LINES, ARGS_APPEND,
     RANGE|EXTRA|NEEDARG|CMDWIN),
  EX(kCmdRubydo,          "rubydo",       &parse_rest_line,
     ARG_NAME_NAME, ARGS_NAME,
     RANGE|DFLALL|EXTRA|NEEDARG|CMDWIN | LITERAL),
  EX(kCmdRubyfile,        "rubyfile",     NOFUNC,
     ARG_SO_FILES, ARGS_SO,
     RANGE|FILE1|NEEDARG|CMDWIN),
  EX(kCmdRundo,           "rundo",        NOFUNC,
     ARG_SO_FILES, ARGS_SO,
     NEEDARG|FILE1),
  EX(kCmdRviminfo,        "rviminfo",     NOFUNC,
     ARG_SO_FILES, ARGS_SO,
     BANG|FILE1|TRLBAR|CMDWIN),
  EX(kCmdSubstitute,      "substitute",   &parse_sub,
     ARG_S_FLAGS, ARGS_S,
     RANGE|WHOLEFOLD|EXTRA|CMDWIN | LITERAL),
  EX(kCmdSNext,           "sNext",        NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     EXTRA|RANGE|NOTADR|COUNT|BANG|EDITCMD|ARGOPT|TRLBAR),
  EX(kCmdSargument,       "sargument",    NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     BANG|RANGE|NOTADR|COUNT|EXTRA|EDITCMD|ARGOPT|TRLBAR),
  EX(kCmdSall,            "sall",         NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     BANG|RANGE|NOTADR|COUNT|TRLBAR),
  EX(kCmdSandbox,         "sandbox",      NOFUNC,
     ARG_MODIFIER_CMD, ARGS_MODIFIER,
     NEEDARG|EXTRA|NOTRLCOM | ISMODIFIER),
  EX(kCmdSaveas,          "saveas",       NOFUNC,
     ARG_WN_FILES, ARGS_WN,
     BANG|DFLALL|FILE1|ARGOPT|CMDWIN|TRLBAR),
  EX(kCmdSbuffer,         "sbuffer",      NOFUNC,
     ARG_SO_FILES, ARGS_SO,
     BANG|RANGE|NOTADR|BUFNAME|BUFUNL|COUNT|EXTRA|TRLBAR),
  EX(kCmdSbNext,          "sbNext",       NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|COUNT|TRLBAR),
  EX(kCmdSball,           "sball",        NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|COUNT|TRLBAR),
  EX(kCmdSbfirst,         "sbfirst",      NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     TRLBAR),
  EX(kCmdSblast,          "sblast",       NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     TRLBAR),
  EX(kCmdSbmodified,      "sbmodified",   NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|COUNT|TRLBAR),
  EX(kCmdSbnext,          "sbnext",       NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|COUNT|TRLBAR),
  EX(kCmdSbprevious,      "sbprevious",   NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|COUNT|TRLBAR),
  EX(kCmdSbrewind,        "sbrewind",     NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     TRLBAR),
  EX(kCmdScriptnames,     "scriptnames",  NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     TRLBAR|CMDWIN),
  EX(kCmdScriptencoding,  "scriptencoding", &parse_scriptencoding,
     ARG_NAME_NAME, ARGS_NAME,
     WORD1|TRLBAR|CMDWIN),
  EX(kCmdScscope,         "scscope",      &parse_cscope,
     ARG_SUBCMD, ARGS_SUBCMD,
     EXTRA|NOTRLCOM),
  EX(kCmdSet,             "set",          &parse_set,
     ARG_SET_VALUES, ARGS_SET,
     TRLBAR|EXTRA|CMDWIN|SBOXOK),
  EX(kCmdSetfiletype,     "setfiletype",  &parse_rest_line,
     ARG_NAME_NAME, ARGS_NAME,
     TRLBAR|EXTRA|NEEDARG|CMDWIN),
  EX(kCmdSetglobal,       "setglobal",    &parse_set,
     ARG_SET_VALUES, ARGS_SET,
     TRLBAR|EXTRA|CMDWIN|SBOXOK),
  EX(kCmdSetlocal,        "setlocal",     &parse_set,
     ARG_SET_VALUES, ARGS_SET,
     TRLBAR|EXTRA|CMDWIN|SBOXOK),
  EX(kCmdSfind,           "sfind",        NOFUNC,
     ARG_E_FILES, ARGS_E,
     BANG|FILE1|RANGE|NOTADR|EDITCMD|ARGOPT|TRLBAR),
  EX(kCmdSfirst,          "sfirst",       NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     EXTRA|BANG|EDITCMD|ARGOPT|TRLBAR),
  EX(kCmdShell,           "shell",        NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     TRLBAR|CMDWIN),
  EX(kCmdSimalt,          "simalt",       &parse_rest_line,
     ARG_SIMALT_KEYS, ARGS_SIMALT,
     NEEDARG|WORD1|TRLBAR|CMDWIN),
  EX(kCmdSign,            "sign",         &parse_sign,
     ARG_SUBCMD, ARGS_SUBCMD,
     NEEDARG|RANGE|NOTADR|EXTRA|CMDWIN | LITERAL),
  EX(kCmdSilent,          "silent",       NOFUNC,
     ARG_MODIFIER_CMD, ARGS_MODIFIER,
     NEEDARG|EXTRA|BANG|NOTRLCOM|SBOXOK|CMDWIN | ISMODIFIER),
  EX(kCmdSleep,           "sleep",        &parse_sleep,
     ARG_SLEEP_MULT, ARGS_SLEEP,
     RANGE|NOTADR|COUNT|EXTRA|TRLBAR|CMDWIN),
  EX(kCmdSlast,           "slast",        NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     EXTRA|BANG|EDITCMD|ARGOPT|TRLBAR),
  EX(kCmdSmagic,          "smagic",       &parse_sub,
     ARG_S_FLAGS, ARGS_S,
     RANGE|WHOLEFOLD|EXTRA|CMDWIN | LITERAL),
  EX(kCmdSmap,            "smap",         &parse_map,
     ARG_MAP_EXPR, ARGS_MAP,
     EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdSmapclear,       "smapclear",    &parse_mapclear,
     ARG_CLEAR_BUFFER, ARGS_CLEAR,
     EXTRA|TRLBAR|CMDWIN),
  EX(kCmdSmenu,           "smenu",        &parse_menu,
     ARG_MENU_RHS, ARGS_MENU,
     RANGE|NOTADR|ZEROR|EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdSnext,           "snext",        NOFUNC,
     ARG_E_FILES, ARGS_E,
     RANGE|NOTADR|BANG|FILES|EDITCMD|ARGOPT|TRLBAR),
  EX(kCmdSniff,           "sniff",        &parse_sniff,
     ARG_SNIFF_MSG, ARGS_SNIFF,
     EXTRA|TRLBAR),
  EX(kCmdSnomagic,        "snomagic",     &parse_sub,
     ARG_S_FLAGS, ARGS_S,
     RANGE|WHOLEFOLD|EXTRA|CMDWIN | LITERAL),
  EX(kCmdSnoremap,        "snoremap",     &parse_map,
     ARG_MAP_EXPR, ARGS_MAP,
     EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdSnoremenu,       "snoremenu",    &parse_menu,
     ARG_MENU_RHS, ARGS_MENU,
     RANGE|NOTADR|ZEROR|EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdSource,          "source",       NOFUNC,
     ARG_SO_FILES, ARGS_SO,
     BANG|FILE1|TRLBAR|SBOXOK|CMDWIN),
  EX(kCmdSort,            "sort",         &parse_sort,
     ARG_SORT_REG, ARGS_SORT,
     RANGE|DFLALL|WHOLEFOLD|BANG|EXTRA|NOTRLCOM|MODIFY | LITERAL),
  EX(kCmdSplit,           "split",        NOFUNC,
     ARG_E_FILES, ARGS_E,
     BANG|FILE1|RANGE|NOTADR|EDITCMD|ARGOPT|TRLBAR),
  EX(kCmdSpellgood,       "spellgood",    &parse_rest_line,
     ARG_NAME_NAME, ARGS_NAME,
     BANG|RANGE|NOTADR|NEEDARG|EXTRA|TRLBAR),
  EX(kCmdSpelldump,       "spelldump",    NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     BANG|TRLBAR),
  EX(kCmdSpellinfo,       "spellinfo",    NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     TRLBAR),
  EX(kCmdSpellrepall,     "spellrepall",  NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     TRLBAR),
  EX(kCmdSpellundo,       "spellundo",    &parse_rest_line,
     ARG_NAME_NAME, ARGS_NAME,
     BANG|RANGE|NOTADR|NEEDARG|EXTRA|TRLBAR),
  EX(kCmdSpellwrong,      "spellwrong",   &parse_rest_line,
     ARG_NAME_NAME, ARGS_NAME,
     BANG|RANGE|NOTADR|NEEDARG|EXTRA|TRLBAR),
  EX(kCmdSprevious,       "sprevious",    NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     EXTRA|RANGE|NOTADR|COUNT|BANG|EDITCMD|ARGOPT|TRLBAR),
  EX(kCmdSrewind,         "srewind",      NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     EXTRA|BANG|EDITCMD|ARGOPT|TRLBAR),
  EX(kCmdStop,            "stop",         NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     TRLBAR|BANG|CMDWIN),
  EX(kCmdStag,            "stag",         &parse_regex,
     ARG_REG_REG, ARGS_REG,
     RANGE|NOTADR|BANG|WORD1|TRLBAR|ZEROR),
  EX(kCmdStartinsert,     "startinsert",  NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     BANG|TRLBAR|CMDWIN),
  EX(kCmdStartgreplace,  "startgreplace", NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     BANG|TRLBAR|CMDWIN),
  EX(kCmdStartreplace,    "startreplace", NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     BANG|TRLBAR|CMDWIN),
  EX(kCmdStopinsert,      "stopinsert",   NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     BANG|TRLBAR|CMDWIN),
  EX(kCmdStjump,          "stjump",       &parse_regex,
     ARG_REG_REG, ARGS_REG,
     BANG|TRLBAR|WORD1),
  EX(kCmdStselect,        "stselect",     &parse_regex,
     ARG_REG_REG, ARGS_REG,
     BANG|TRLBAR|WORD1),
  EX(kCmdSunhide,         "sunhide",      NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|COUNT|TRLBAR),
  EX(kCmdSunmap,          "sunmap",       &parse_unmap,
     ARG_UNMAP_LHS, ARGS_UNMAP,
     EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdSunmenu,         "sunmenu",      &parse_unmenu,
     ARG_UNMENU_LHS, ARGS_UNMENU,
     EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdSuspend,         "suspend",      NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     TRLBAR|BANG|CMDWIN),
  EX(kCmdSview,           "sview",        NOFUNC,
     ARG_E_FILES, ARGS_E,
     BANG|FILE1|RANGE|NOTADR|EDITCMD|ARGOPT|TRLBAR),
  EX(kCmdSwapname,        "swapname",     NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     TRLBAR|CMDWIN),
  EX(kCmdSyntax,          "syntax",       &parse_syntax,
     ARG_SUBCMD, ARGS_SUBCMD,
     EXTRA|NOTRLCOM|CMDWIN | LITERAL),
  EX(kCmdSyntime,         "syntime",      &parse_syntime,
     ARG_SYNTIME_ACTION, ARGS_SYNTIME,
     NEEDARG|WORD1|TRLBAR|CMDWIN),
  EX(kCmdSyncbind,        "syncbind",     NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     TRLBAR),
  EX(kCmdT,               "t",            &parse_address,
     ARG_ADDR_ADDR, ARGS_ADDR,
     RANGE|WHOLEFOLD|EXTRA|TRLBAR|CMDWIN|MODIFY),
  EX(kCmdTNext,           "tNext",        NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|BANG|TRLBAR|ZEROR),
  EX(kCmdTag,             "tag",          &parse_regex,
     ARG_REG_REG, ARGS_REG,
     RANGE|NOTADR|BANG|WORD1|TRLBAR|ZEROR),
  EX(kCmdTags,            "tags",         NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     TRLBAR|CMDWIN),
  EX(kCmdTab,             "tab",          NOFUNC,
     ARG_MODIFIER_CMD, ARGS_MODIFIER,
     NEEDARG|EXTRA|NOTRLCOM|COUNT | ISMODIFIER),
  EX(kCmdTabclose,        "tabclose",     NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|COUNT|BANG|TRLBAR|CMDWIN),
  EX(kCmdTabdo,           "tabdo",        &parse_do,
     ARG_DO_CMD, ARGS_DO,
     NEEDARG|EXTRA|NOTRLCOM | LITERAL),
  EX(kCmdTabedit,         "tabedit",      NOFUNC,
     ARG_E_FILES, ARGS_E,
     BANG|FILE1|RANGE|NOTADR|ZEROR|EDITCMD|ARGOPT|TRLBAR),
  EX(kCmdTabfind,         "tabfind",      NOFUNC,
     ARG_E_FILES, ARGS_E,
     BANG|FILE1|RANGE|NOTADR|ZEROR|EDITCMD|ARGOPT|NEEDARG|TRLBAR),
  EX(kCmdTabfirst,        "tabfirst",     NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     TRLBAR),
  EX(kCmdTabmove,         "tabmove",      &parse_resize,
     ARG_RESIZE_NUMBER, ARGS_RESIZE,
     RANGE|NOTADR|ZEROR|EXTRA|NOSPC|TRLBAR),
  EX(kCmdTablast,         "tablast",      NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     TRLBAR),
  EX(kCmdTabnext,         "tabnext",      NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|COUNT|TRLBAR),
  EX(kCmdTabnew,          "tabnew",       NOFUNC,
     ARG_E_FILES, ARGS_E,
     BANG|FILE1|RANGE|NOTADR|ZEROR|EDITCMD|ARGOPT|TRLBAR),
  EX(kCmdTabonly,         "tabonly",      NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     BANG|TRLBAR|CMDWIN),
  EX(kCmdTabprevious,     "tabprevious",  NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|COUNT|TRLBAR),
  EX(kCmdTabNext,         "tabNext",      NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|COUNT|TRLBAR),
  EX(kCmdTabrewind,       "tabrewind",    NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     TRLBAR),
  EX(kCmdTabs,            "tabs",         NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     TRLBAR|CMDWIN),
  EX(kCmdTcl,             "tcl",          &parse_script,
     ARG_APPEND_LINES, ARGS_APPEND,
     RANGE|EXTRA|NEEDARG|CMDWIN),
  EX(kCmdTcldo,           "tcldo",        &parse_rest_line,
     ARG_NAME_NAME, ARGS_NAME,
     RANGE|DFLALL|EXTRA|NEEDARG|CMDWIN | LITERAL),
  EX(kCmdTclfile,         "tclfile",      NOFUNC,
     ARG_SO_FILES, ARGS_SO,
     RANGE|FILE1|NEEDARG|CMDWIN),
  EX(kCmdTearoff,         "tearoff",      &parse_popup,
     ARG_POPUP_NAME, ARGS_POPUP,
     NEEDARG|EXTRA|TRLBAR|NOTRLCOM|CMDWIN),
  EX(kCmdTfirst,          "tfirst",       NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|BANG|TRLBAR|ZEROR),
  EX(kCmdThrow,           "throw",        &parse_expr_cmd,
     ARG_EXPR_EXPR, ARGS_EXPR,
     EXTRA|NEEDARG|SBOXOK|CMDWIN | ISEXPR),
  EX(kCmdTjump,           "tjump",        &parse_regex,
     ARG_REG_REG, ARGS_REG,
     BANG|TRLBAR|WORD1),
  EX(kCmdTlast,           "tlast",        NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     BANG|TRLBAR),
  EX(kCmdTmenu,           "tmenu",        &parse_menu,
     ARG_MENU_RHS, ARGS_MENU,
     RANGE|NOTADR|ZEROR|EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdTnext,           "tnext",        NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|BANG|TRLBAR|ZEROR),
  EX(kCmdTopleft,         "topleft",      NOFUNC,
     ARG_MODIFIER_CMD, ARGS_MODIFIER,
     NEEDARG|EXTRA|NOTRLCOM | ISMODIFIER),
  EX(kCmdTprevious,       "tprevious",    NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|BANG|TRLBAR|ZEROR),
  EX(kCmdTrewind,         "trewind",      NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|BANG|TRLBAR|ZEROR),
  EX(kCmdTry,             "try",          NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     TRLBAR|SBOXOK|CMDWIN),
  EX(kCmdTselect,         "tselect",      &parse_regex,
     ARG_REG_REG, ARGS_REG,
     BANG|TRLBAR|WORD1),
  EX(kCmdTunmenu,         "tunmenu",      &parse_unmenu,
     ARG_UNMENU_LHS, ARGS_UNMENU,
     EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdUndo,            "undo",         NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|COUNT|ZEROR|TRLBAR|CMDWIN),
  EX(kCmdUndojoin,        "undojoin",     NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     TRLBAR|CMDWIN),
  EX(kCmdUndolist,        "undolist",     NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     TRLBAR|CMDWIN),
  EX(kCmdUnabbreviate,    "unabbreviate", &parse_unmap,
     ARG_UNMAP_LHS, ARGS_UNMAP,
     EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdUnhide,          "unhide",       NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|NOTADR|COUNT|TRLBAR),
  EX(kCmdUnlet,           "unlet",        &parse_lvals,
     ARG_EXPRS_EXPRS, ARGS_EXPRS,
     BANG|EXTRA|NEEDARG|SBOXOK|CMDWIN | ISEXPR),
  EX(kCmdUnlockvar,       "unlockvar",    &parse_lockvar,
     ARG_LOCKVAR_DEPTH, ARGS_LOCKVAR,
     BANG|EXTRA|NEEDARG|SBOXOK|CMDWIN | ISEXPR),
  EX(kCmdUnmap,           "unmap",        &parse_unmap,
     ARG_UNMAP_LHS, ARGS_UNMAP,
     BANG|EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdUnmenu,          "unmenu",       &parse_unmenu,
     ARG_UNMENU_LHS, ARGS_UNMENU,
     BANG|EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdUnsilent,        "unsilent",     NOFUNC,
     ARG_MODIFIER_CMD, ARGS_MODIFIER,
     NEEDARG|EXTRA|NOTRLCOM|SBOXOK|CMDWIN | ISMODIFIER),
  EX(kCmdUpdate,          "update",       &parse_write,
     ARG_W_APPEND, ARGS_UP,
     RANGE|WHOLEFOLD|BANG|ARGOPT|DFLALL|TRLBAR | EXTRA|LITERAL),
  EX(kCmdVglobal,         "vglobal",      &parse_global,
     ARG_G_REG, ARGS_G,
     RANGE|WHOLEFOLD|EXTRA|DFLALL|CMDWIN),
  EX(kCmdVersion,         "version",      NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     EXTRA|TRLBAR|CMDWIN),
  EX(kCmdVerbose,         "verbose",      NOFUNC,
     ARG_MODIFIER_CMD, ARGS_MODIFIER,
     NEEDARG|RANGE|NOTADR|EXTRA|NOTRLCOM|SBOXOK|CMDWIN | COUNT|ISMODIFIER),
  EX(kCmdVertical,        "vertical",     NOFUNC,
     ARG_MODIFIER_CMD, ARGS_MODIFIER,
     NEEDARG|EXTRA|NOTRLCOM | ISMODIFIER),
  EX(kCmdVisual,          "visual",       NOFUNC,
     ARG_E_FILES, ARGS_E,
     BANG|FILE1|EDITCMD|ARGOPT|TRLBAR),
  EX(kCmdView,            "view",         NOFUNC,
     ARG_E_FILES, ARGS_E,
     BANG|FILE1|EDITCMD|ARGOPT|TRLBAR),
  EX(kCmdVimgrep,         "vimgrep",      &parse_vimgrep,
     ARG_VIMG_REG, ARGS_VIMG,
     RANGE|NOTADR|BANG|NEEDARG|EXTRA|NOTRLCOM|TRLBAR | ISGREP),
  EX(kCmdVimgrepadd,      "vimgrepadd",   &parse_vimgrep,
     ARG_VIMG_REG, ARGS_VIMG,
     RANGE|NOTADR|BANG|NEEDARG|EXTRA|NOTRLCOM|TRLBAR | ISGREP),
  EX(kCmdViusage,         "viusage",      NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     TRLBAR),
  EX(kCmdVmap,            "vmap",         &parse_map,
     ARG_MAP_EXPR, ARGS_MAP,
     EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdVmapclear,       "vmapclear",    &parse_mapclear,
     ARG_CLEAR_BUFFER, ARGS_CLEAR,
     EXTRA|TRLBAR|CMDWIN),
  EX(kCmdVmenu,           "vmenu",        &parse_menu,
     ARG_MENU_RHS, ARGS_MENU,
     RANGE|NOTADR|ZEROR|EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdVnoremap,        "vnoremap",     &parse_map,
     ARG_MAP_EXPR, ARGS_MAP,
     EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdVnew,            "vnew",         NOFUNC,
     ARG_E_FILES, ARGS_E,
     BANG|FILE1|RANGE|NOTADR|EDITCMD|ARGOPT|TRLBAR),
  EX(kCmdVnoremenu,       "vnoremenu",    &parse_menu,
     ARG_MENU_RHS, ARGS_MENU,
     RANGE|NOTADR|ZEROR|EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdVsplit,          "vsplit",       NOFUNC,
     ARG_E_FILES, ARGS_E,
     BANG|FILE1|RANGE|NOTADR|EDITCMD|ARGOPT|TRLBAR),
  EX(kCmdVunmap,          "vunmap",       &parse_unmap,
     ARG_UNMAP_LHS, ARGS_UNMAP,
     EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdVunmenu,         "vunmenu",      &parse_unmenu,
     ARG_UNMENU_LHS, ARGS_UNMENU,
     EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdWrite,           "write",        &parse_write,
     ARG_W_SHELL, ARGS_W,
     RANGE|WHOLEFOLD|BANG|ARGOPT|DFLALL|TRLBAR|CMDWIN | EXTRA|LITERAL),
  EX(kCmdWNext,           "wNext",        NOFUNC,
     ARG_WN_FILES, ARGS_WN,
     RANGE|WHOLEFOLD|NOTADR|BANG|FILE1|ARGOPT|TRLBAR),
  EX(kCmdWall,            "wall",         NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     BANG|TRLBAR|CMDWIN),
  EX(kCmdWhile,           "while",        &parse_expr_cmd,
     ARG_EXPR_EXPR, ARGS_EXPR,
     EXTRA|NOTRLCOM|SBOXOK|CMDWIN | ISEXPR),
  EX(kCmdWinsize,         "winsize",      &parse_2numbers,
     ARG_2INTS_NUM2, ARGS_2INTS,
     EXTRA|NEEDARG|TRLBAR),
  EX(kCmdWincmd,          "wincmd",       &parse_wincmd,
     ARG_WINCMD_CHAR, ARGS_WINCMD,
     NEEDARG|WORD1|RANGE|NOTADR | LITERAL),
  EX(kCmdWindo,           "windo",        &parse_do,
     ARG_DO_CMD, ARGS_DO,
     BANG|NEEDARG|EXTRA|NOTRLCOM | LITERAL),
  EX(kCmdWinpos,          "winpos",       &parse_2numbers,
     ARG_2INTS_NUM2, ARGS_2INTS,
     EXTRA|TRLBAR|CMDWIN),
  EX(kCmdWnext,           "wnext",        NOFUNC,
     ARG_WN_FILES, ARGS_WN,
     RANGE|NOTADR|BANG|FILE1|ARGOPT|TRLBAR),
  EX(kCmdWprevious,       "wprevious",    NOFUNC,
     ARG_WN_FILES, ARGS_WN,
     RANGE|NOTADR|BANG|FILE1|ARGOPT|TRLBAR),
  EX(kCmdWq,              "wq",           NOFUNC,
     ARG_EXIT_FILES, ARGS_EXIT,
     RANGE|WHOLEFOLD|BANG|FILE1|ARGOPT|DFLALL|TRLBAR),
  EX(kCmdWqall,           "wqall",        NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     BANG|FILE1|ARGOPT|DFLALL|TRLBAR),
  EX(kCmdWsverb,          "wsverb",       &parse_rest_line,
     ARG_NAME_NAME, ARGS_NAME,
     EXTRA|NOTADR|NEEDARG),
  EX(kCmdWundo,           "wundo",        NOFUNC,
     ARG_SO_FILES, ARGS_SO,
     BANG|NEEDARG|FILE1),
  EX(kCmdWviminfo,        "wviminfo",     NOFUNC,
     ARG_SO_FILES, ARGS_SO,
     BANG|FILE1|TRLBAR|CMDWIN),
  EX(kCmdXit,             "xit",          NOFUNC,
     ARG_EXIT_FILES, ARGS_EXIT,
     RANGE|WHOLEFOLD|BANG|FILE1|ARGOPT|DFLALL|TRLBAR|CMDWIN),
  EX(kCmdXall,            "xall",         NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     BANG|TRLBAR),
  EX(kCmdXmap,            "xmap",         &parse_map,
     ARG_MAP_EXPR, ARGS_MAP,
     EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdXmapclear,       "xmapclear",    &parse_mapclear,
     ARG_CLEAR_BUFFER, ARGS_CLEAR,
     EXTRA|TRLBAR|CMDWIN),
  EX(kCmdXmenu,           "xmenu",        &parse_menu,
     ARG_MENU_RHS, ARGS_MENU,
     RANGE|NOTADR|ZEROR|EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdXnoremap,        "xnoremap",     &parse_map,
     ARG_MAP_EXPR, ARGS_MAP,
     EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdXnoremenu,       "xnoremenu",    &parse_menu,
     ARG_MENU_RHS, ARGS_MENU,
     RANGE|NOTADR|ZEROR|EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdXunmap,          "xunmap",       &parse_unmap,
     ARG_UNMAP_LHS, ARGS_UNMAP,
     EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdXunmenu,         "xunmenu",      &parse_unmenu,
     ARG_UNMENU_LHS, ARGS_UNMENU,
     EXTRA|TRLBAR|NOTRLCOM|USECTRLV|CMDWIN),
  EX(kCmdYank,            "yank",         NOFUNC,
     ARG_MARK_CHAR, ARGS_MARK,
     RANGE|WHOLEFOLD|REGSTR|COUNT|TRLBAR|CMDWIN),
  EX(kCmdZ,               "z",            &parse_z,
     ARG_Z_MULTIPLIER, ARGS_Z,
     RANGE|WHOLEFOLD|EXTRA|EXFLAGS|TRLBAR|CMDWIN),

  /* commands that don't start with a lowercase letter */
  EX(kCmdBang,            "!",            &parse_rest_allow_empty,
     ARG_SHELL_ARGS, ARGS_SHELL,
     RANGE|WHOLEFOLD|BANG|CMDWIN|EXTRA | LITERAL),
  EX(kCmdPound,           "#",            NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|WHOLEFOLD|COUNT|EXFLAGS|TRLBAR|CMDWIN),
  EX(kCmdAnd,             "&",            &parse_sub,
     ARG_S_FLAGS, ARGS_S,
     RANGE|WHOLEFOLD|EXTRA|CMDWIN|MODIFY),
  EX(kCmdStar,            "*",            &parse_at,
     ARG_MARK_CHAR, ARGS_MARK,
     RANGE|WHOLEFOLD|EXTRA|TRLBAR|CMDWIN),
  EX(kCmdLshift,          "<",            NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|WHOLEFOLD|COUNT|EXFLAGS|TRLBAR|CMDWIN|MODIFY),
  EX(kCmdEqual,           "=",            NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|TRLBAR|DFLALL|EXFLAGS|CMDWIN),
  EX(kCmdRshift,          ">",            NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|WHOLEFOLD|COUNT|EXFLAGS|TRLBAR|CMDWIN|MODIFY),
  EX(kCmdAt,              "@",            &parse_at,
     ARG_MARK_CHAR, ARGS_MARK,
     RANGE|WHOLEFOLD|EXTRA|TRLBAR|CMDWIN),
  EX(kCmdUpNext,          "Next",         NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     EXTRA|RANGE|NOTADR|COUNT|BANG|EDITCMD|ARGOPT|TRLBAR),
  EX(kCmdUpPrint,         "Print",        NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     RANGE|WHOLEFOLD|COUNT|EXFLAGS|TRLBAR|CMDWIN),
  EX(kCmdX,               "X",            NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     TRLBAR),
  EX(kCmdTilde,           "~",            &parse_sub,
     ARG_S_FLAGS, ARGS_S,
     RANGE|WHOLEFOLD|EXTRA|CMDWIN|MODIFY),
  // XXX If you add real command just above this line (i.e. after kCmdTilde)
  //     you should update kCmdSIZE
#ifndef DO_DECLARE_EXCMD
# define kCmdSIZE (((size_t)kCmdTilde) + 1)
#endif
  EX(kCmdUSER,            NULL,           &parse_rest_allow_empty,
     ARG_USER_ARG, ARGS_USER,
     BANG|RANGE|EXTRA|NOTRLCOM|USECTRLV | LITERAL),
  EX(kCmdHashbangComment, "#!",           NOFUNC,
     ARG_NAME_NAME, ARGS_NAME,
     0),
  EX(kCmdComment,         "\"",           NOFUNC,
     ARG_NAME_NAME, ARGS_NAME,
     0),
  EX(kCmdSyntaxError,     NULL,           NOFUNC,
     ARG_ERROR_OFFSET, ARGS_ERROR,
     0),
  EX(kCmdSyntaxErrorParent, NULL,         NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     0),
  EX(kCmdMissing,         NULL,           NOFUNC,
     ARG_NO_ARGS, ARGS_NO,
     0),
  // XXX If you add any command just above this line (i.e. after kCmdMissing)
  //     you should update kCmdREAL_SIZE
#ifndef DO_DECLARE_EXCMD
# define kCmdREAL_SIZE (((size_t)kCmdMissing))
#endif
#ifdef DO_DECLARE_EXCMD
};
#else
} CommandType;
#endif
#endif
#endif  // NVIM_VIML_PARSER_COMMAND_DEFINITIONS_H
